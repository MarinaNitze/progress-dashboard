---
layout: default
title: Search
---

<script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/fuse.js@6.6.2"></script>

<div x-init="init" x-data="searchData">
  <div class="bg-white border-b-2 border-black">
      <div class="mx-auto px-8 md:px-[5%]">
          <div class="max-w-screen-lg py-24">
                <h1 class="text-5xl font-serif font-black mb-8" x-text="searchParam != '' ? `Search results for: ${searchParam}` : `Search`"></h1>
                <form class="flex border-2 border-black rounded-lg max-w-[600px]">
                    <input class="font-sans placeholder-base text-base w-full p-4 rounded-l-lg" type="text" x-model="search" x-bind:value="search" />
                    <button class="cursor-pointer font-sans bg-salmon text-base font-bold px-12 border-2 border-white hover:text-base hover:underline rounded-r-lg" @click="performSearch">Search</button>
                </form>
          </div>
      </div>
  </div>
  <template x-if="hasNoResults()">
    <div class="max-w-[850px] mx-auto">
        <h3 class="text-[26px] my-24">No results found</h3>
    </div>
  </template>
  <template x-if="hasResults()">
    <div class="md:block mx-auto px-8 md:px-[5%] my-24">
        <div x-data="{ activeTab: 1 }" class="max-w-[850px] mx-auto">
            <!-- Buttons -->
            <div class="flex mb-8">
                <div
                    role="tablist"
                    class="w-full inline-flex flex-wrap"
                    @keydown.right.prevent.stop="$focus.wrap().next()"
                    @keydown.left.prevent.stop="$focus.wrap().prev()"
                    @keydown.home.prevent.stop="$focus.first()"
                    @keydown.end.prevent.stop="$focus.last()"
                >
                    <!-- Button #1 -->
                    <button
                        id="tab-1"
                        class="border-b-4 pb-2 mr-4"
                        :class="activeTab === 1 ? 'border-salmon' : 'border-transparent'"
                        :tabindex="activeTab === 1 ? 0 : -1"
                        :aria-selected="activeTab === 1"
                        aria-controls="tabpanel-1"
                        @click="activeTab = 1"
                        @focus="activeTab = 1"
                    >All</button>
                    <!-- Button #2 -->
                    <button
                        id="tab-2"
                        class="border-b-4 pb-2 mr-4"
                        :class="activeTab === 2 ? 'border-salmon' : 'border-transparent'"
                        :tabindex="activeTab === 2 ? 0 : -1"
                        :aria-selected="activeTab === 2"
                        aria-controls="tabpanel-2"
                        @click="activeTab = 2"
                        @focus="activeTab = 2"
                    >Projects</button>
                    <!-- Button #3 -->
                    <button
                        id="tab-3"
                        class="border-b-4 pb-2"
                        :class="activeTab === 3 ? 'border-salmon' : 'border-transparent'"
                        :tabindex="activeTab === 3 ? 0 : -1"
                        :aria-selected="activeTab === 3"
                        aria-controls="tabpanel-3"
                        @click="activeTab = 3"
                        @focus="activeTab = 3"
                    >Topics</button>
                </div>
            </div>

            <!-- Tab panels -->
            <div>
                <div class="relative flex flex-col">

                    <!-- Panel #1 -->
                    <article
                        id="tabpanel-1"
                        class="w-full"
                        role="tabpanel" 
                        tabindex="0"
                        aria-labelledby="tab-1"
                        x-show="activeTab === 1"                       
                    >
                        <ul>
                            <template x-for="result in results" :key="result.title">
                                <li class="mb-12">
                                    <template x-if="result && result.type === 'PROJECT'">
                                        <div class="text-lg">
                                            <h3 class="text-[26px] text-navy font-bold hover:underline"><a :href="'/projects/' + result.title" class="flex-grow" x-text="result.heading"></a></h3>
                                            <div class="my-2 font-bold">Project</div>
                                            <div class="flex-grow" x-html="markdownToHtml(result.about)"></div>
                                        </div>
                                    </template>
                                    <template x-if="result && result.type === 'TOPIC'">
                                        <div class="text-lg">
                                            <h3 class="text-[26px] text-navy font-bold hover:underline"><a :href="'/topics/' + result.title" class="flex-grow" x-text="result.hero.title"></a></h3>
                                            <div class="my-2 font-bold">Topic</div>
                                            <div class="flex-grow" x-html="markdownToHtml(result.why)"></div>
                                        </div>
                                    </template>
                                </li>
                            </template>
                        </ul>
                    </article>

                    <!-- Panel #2 -->
                    <article
                        id="tabpanel-2"
                        class="w-full"
                        role="tabpanel" 
                        tabindex="0"
                        aria-labelledby="tab-2"
                        x-show="activeTab === 2"                     
                    >
                        <ul>
                            <template x-for="result in results" :key="result.title" x-if="result && result.type === 'RECOMMENDATION'">
                                <li class="mb-12">
                                    <template x-if="result && result.type === 'RECOMMENDATION'">
                                        <div class="text-lg">
                                            <h3 class="text-[26px] text-navy font-bold hover:underline"><a :href="'/recommendations/' + result.title" class="flex-grow" x-text="result.heading"></a></h3>
                                            <div class="my-2 font-bold">Recommendation</div>
                                            <div class="flex-grow" x-html="markdownToHtml(result.about)"></div>
                                        </div>
                                    </template>
                                </li>
                            </template>
                        </ul>
                    </article>
                    
                    <!-- Panel #3 -->
                    <article
                        id="tabpanel-3"
                        class="w-full"
                        role="tabpanel" 
                        tabindex="0"
                        aria-labelledby="tab-3"
                        x-show="activeTab === 3"                    
                    >
                        <ul>
                            <template x-for="result in results" :key="result.title" x-if="result && result.type === 'TOPIC'">
                                <li class="mb-12">
                                    <template x-if="result && result.type === 'TOPIC'">
                                        <div class="text-lg">
                                            <h3 class="text-[26px] text-navy font-bold hover:underline"><a :href="'/topics/' + result.title" class="flex-grow" x-text="result.hero.title"></a></h3>
                                            <div class="my-2 font-bold">Topic</div>
                                            <div class="flex-grow" x-html="markdownToHtml(result.about)"></div>
                                        </div>
                                    </template>
                                </li>
                            </template>
                        </ul>
                    </article>
                </div>
            </div>
        </div>
    </template>
  </div>
</div>

<script>
    let CWP_RECOMMENDATIONS = {{ recommendations | dump | safe }};
    let CWP_TOPICS = {{ topics | dump | safe }};
    let CWP_INDEX;

    let urlParams = new URLSearchParams(window.location.search);

    document.addEventListener('alpine:init', () => {
        Alpine.data('searchData', () => ({
            search: '',
            results: [],
            searchParam: '',
            hasNoResults() {
                return this.results.length === 0 && this.searchParam !== '';
            },
            hasResults() {
                return this.results.length > 0;
            },
            init() {
                this.search = urlParams.get('q') || '';
                this.searchParam = urlParams.get('q') || '';

                const checkFuseSearch = setInterval(() => {
                    if (typeof Fuse !== 'undefined') {
                        this.initSearch();
                        clearInterval(checkFuseSearch);
                    } else {
                        console.log('Waiting for FlexSearch to load...');
                    }
                }, 1000);
            },
            initSearch() {
                const options = {
                    includeScore: true,
                    keys: ['heading', 'hero.title', 'who', 'what', 'how', 'why']
                }
            
                CWP_INDEX = new Fuse([], options);

                CWP_TOPICS.topics.forEach((topic, index) => {
                    CWP_INDEX.add({
                        type: "TOPIC",
                        ...topic
                    });
                });
                
    WP.recommendations.forEach((recommendation, index) => WP            CWP_INDEX.add({
                        type: "RECOMMENDATION",
                        ...recommendation
                    });
                });

                if (this.search !== '') {
                    this.performSearch()
                }
            },
            markdownToHtml(markdownText) {
                return marked.parse(markdownText);
            },
            performSearch(ev) {
                if (ev) {
                    ev.preventDefault();
                }

                this.results = [];

                let url = new URL(window.location.href);
                url.searchParams.set('q', this.search);
                window.history.pushState({}, '', url);

                this.searchParam = this.search;

                const searchResults = CWP_INDEX.search(this.search);

                if (searchResults.length > 0) {
                    this.results = searchResults.map(result => result.item);
                }
            }
        }));
    });
</script>

